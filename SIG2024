library(terra)

matrix<-matrix(runif(25), ncol=5,nrow=5)

raster<-rast(matrix) #transformando a matrix em raster!
plot(raster)

values(raster)[1:5]<-1:5 #extrair os valores do raster e substituir os valores de 1 a 5
plot(raster)

raster2<-rast(ncol=5, nrow=5, xmin=0,xmax=5, ymin=0, ymax=5)
values(raster2)<-1:25
plot(raster2)

crs(raster2) #saber qual o sistema de coordenadas

raster3 <- rast(matrix (runif(25), ncol=5, nrow=5))
junto <- rast (list(raster,raster3))
nlyr(junto)
plot(junto)

junto[[1]]
junto[[2]]

xyFromCell(raster,1:3)

cellFromXY(raster,matrix(c(3.5,2.5), nrow=1, ncol=2)) #posição da celula de tal coordenada

writeRaster(raster, "raster.tif", overwrite = T)

raster <- rast ("raster.tif")

mapbiomas<-rast("R/Dia 1/Tipos de dados/Raster/mapbioma_microbacia_araguaia.tif")

plot(mapbiomas)

####sistema de referência 
x<-c(1,2,3)
y<-c(2,3,4)
coords<-cbind(ID=1,x,y)
pontos<-terra::vect(coords)
terra::plot(pontos)

linhas<-vect(coords,type="lines")
plot(linhas)

x<-c(1,3,3)
y<-c(2,2,4)
coords<-cbind(ID=1,x,y)
poligono<-vect(coords,type="polygon")
plot(poligono)

ext(poligono) #extensão max e min do poligono
crs(poligono)

x2<-c(1,1,3)
y2<-c(2,4,4)
coords2<-cbind(ID=2,x2,y2)
coords_junto<-rbind(coords, coords2)
plot(coords_junto)
tabeladeatributos<-data.frame(ID=1:2,
                              dado=c("Inf","Sup"))
poligono2<-vect(coords_junto,atts=tabeladeatributos,type="polygon")
plot(poligono2, col=c("black","purple")) #com a tabela de atributos eu posso colorir o meu plot!

plot(poligono2[poligono2$dado=="Sup",],col="purple")
plot(poligono2[poligono2$dado=="Inf",],col="purple")

writeVector(poligono2,"poligono2.shp")

matrix<-matrix(runif(25),nrow=5,ncol=5)
raster<-terra::rast(matrix)

rast2<-rasterize(poligono,raster,touches=TRUE)
plot(rast2)
plot(poligono,add=TRUE)

to_poly<-as.polygons(rast2)
plot(to_poly)

#####
mapbiomas<-rast("R/Dia 1/Tipos de dados/Raster/mapbioma_microbacia_araguaia.tif")
plot(mapbiomas)
mapbiomas_poly<-as.polygons(mapbiomas)
plot(mapbiomas_poly)

grid<-vect("R/Dia 1/Tipos de dados/Raster/Grid_America do Sul/Adequabilidade_Micrurs.shp")
raster_grid<-rasterize(grid,rast(ext=ext(grid),crs=crs(grid),res=0.5))
plot(raster_grid)

###
#ex1: Crie um raster e adicione valores de uma distribuição normal com média 5 e desvio padrão 1.
raster1<- rast(matrix (runif(25), ncol=5, nrow=5))
coords1<-cbind(ID=1,raster1)

#ex2: Qual função utilizamos para extrairmos informações sobre os limites do raster, coordenadas geográficas e resolução espacial.
crs(raster1) 
xyFromCell(raster1,1:3)

#ex3: Substitua os valores de 5 células do raster.
values(raster1)[1:5]<-1:5
plot(raster1)

#ex4: Extraia valores que células específicas do raster.
cellFromXY(raster1,matrix(c(3.5,2.5), nrow=1, ncol=2))

#ex5: Transforme o raster em vetor.
vetor1<-as.polygons(raster1)
plot(vetor1)

#ex6: Crie 3 polígono a partir de uma matriz de coordenadas geográficas.
coords1 <- coords[c(1:2), ]   # Primeiro polígono
coords2 <- coords[c(2:3), ] # Segundo polígono

poly1 <- vect(coords1, type = "polygons", crs = crs(raster1))
poly2 <- vect(coords2, type = "polygons", crs = crs(raster1))

plot(raster1, main = "Raster com dois Polígonos")
plot(poly1, add = TRUE, col = "red", border = "red")
plot(poly2, add = TRUE, col = "red", border = "red")

#ex7: Anexe atributos aos polígonos.
coords_junto<-rbind(coords1, coords2)
plot(coords_junto)
tabeladeatributos<-data.frame(ID=1:2,
                              dado=c("Inf","Sup"))
print(tabeladeatributos)
poligono2<-vect(coords_junto,atts=tabeladeatributos,type="polygon")
plot(poligono2, col=c("black"))

#ex8: Transforme o vetor em raster.
rast2<-rasterize(poligono2,raster,touches=TRUE)
plot(rast2)

####mundo!
install.packages("rnaturalearth")
library(rnaturalearth)

world<-terra::vect(rnaturalearth::ne_countries(returnclass="sf"))
print(world)
crs(world)

#mudar a projeção
moll<-project(world,"ESRI:54009")
plot(world)
plot(moll) #mantém as áreas e distorce a forma!

behrmann<-project(world,"ESRI:54017")
plot(behrmann) #também equal area, mas distoce diferente

homolosine<-project(world,"ESRI:54052")
plot(homolosine)

#todos de uma vez:
par(mfrow = c(2, 2))
plot(world, main = "world")
plot(moll, main = "moll")
plot(behrmann, main = "behrmann")
plot(homolosine,  main = "homolosine")
par(mfrow = c(1, 1))

#####amazônia legal
amazon<-vect("R/Dia 1/Projecao_reprojecao/brazilian_legal_amazon/")
plot(amazon)

beh_amazon<-project(amazon,'ESRI:54017')
plot(beh_amazon)

world_rast<-rasterize(world, rast())
plot(world_rast)
moll_rast<-terra::project(world_rast,crs(moll))
behrmann_rast<-terra::project(world_rast,crs(behrmann))
par(mfrow=c(2,2))
terra::plot(cellSize(world_rast),main="Mercator")
terra::plot(cellSize(moll_rast),main="Mollweide")
terra::plot(cellSize(behrmann_rast),main="Behrmann")

mapbiomas<-rast("R/Dia 1/Tipos de dados/Raster/mapbioma_microbacia_araguaia.tif")

mapbiomas2<-project(mapbiomas,"ESRI:54009",method="near") #vizinho mais próximo
plot(mapbiomas2)
###
#ex1
library(sf)
mapcerrado<-st_read("R/Dia 1/Projecao_reprojecao/VegetacaoCerrado/VegetacaoCerrado.shp")
crs(mapcerrado)
mapcerrado <- crs("EPSG:4326")
plot(mapcerrado)
##########3
mapbiomas<-rast("R/Dia 1/Tipos de dados/Raster/mapbioma_microbacia_araguaia.tif")

mapbiomas+1 #correções de valores dos pixels (+ 1 pixel, ex)
mapbiomas-10  

#testes lógicos
plot(mapbiomas>10| mapbiomas <3)
plot(mapbiomas>10& mapbiomas >3)

extent1<-ext(-50.4,-50.2,-7.6,-7.3)
extent2<-ext(-50,-49.8,-7.7,-7.4)
crop1<-terra::crop(mapbiomas,extent1)
crop2<-terra::crop(mapbiomas,extent2)
plot(crop1)
plot(crop2)
####

mask<-ifel(mapbiomas<=20,NA,1) #filtrar apenas valores acima de 20, todos valores acima de 20 é 1
#raster apenas de 1
#mask<-ifel(mapbiomas==4 |mapbiomas==10,1,NA) #usado para testes lógicos
mapbiomas_mask<-mask(mapbiomas,mask)
plot(mapbiomas_mask)

stack<-rast(list(mapbiomas,mapbiomas)) #um stack com duas camadas
names(stack)<-c("1","2")
stack[[1]]
stack$"1"    #formas de extrair raster da lista de raster, e nomear essas listas!
stack["1"]

#mudar a resolução de refinado para grosseiro, e sucessivamente
res(mapbiomas)*111000 #para eu ver a resolução em km²
upscaling<-aggregate(mapbiomas, fact=c(2,2), fun="modal") #usando a moda eu generalizo para o valor mais frequente!
res(upscaling)
plot(upscaling)
#fazer isso para ter adequabilidade do dado!
downscaling<-disagg(mapbiomas,
                    fact=c(2,2),
                    method="near") #célula em escala mais grosseira sendo transformada em uma célula mais refinada
res(downscaling)

raster_example<-mapbiomas
terra::values(raster_example)<-rnorm(terra::ncell(mapbiomas)) 
zonal(raster_example,mapbiomas,"mean") #a temperatura média de cada classe do mapbiomas

###média de temperatura das células em média das classes do mapbiomas dentro do Cerrado na bacia TO/AR
clima<-rast("R/Dia 4/Variavel_climatica/clima0k_cerrado.tif")
temperatura<-clima[[1]]
temperatura<-resample(temperatura, mapbiomas) #reamostrou o raster para o outro, extraiu os dados de um e colocou em cima do outro
zonal(temperatura,mapbiomas,"mean")
print(clima)

###
est_focal<-focal(raster_example, w=3, fun="modal") #calculat estatística focal do raster
lista<-sprc(crop1,crop2) #cria uma lista nos dois rasters
merge_rast<-merge(lista)
plot(merge_rast)

###
neotropic<-vect("R/Dia 3/ecoregions/Ecoregions2017/Ecoregions2017.shp")
plot(neotropic) #mapa de ecoregiões do neotropico
names(neotropic)
eco_name<-neotropic[,c("ECO_NAME","ECO_BIOME_")] #filtrar colunas dentro do vetor
geoms<-geom(neotropic) #ver se esse polígono tem buraco ou não nele (olhar no hole)

sum(geoms[,"hole"]==1)
no_hole<-fillHoles(neotropic) #tira tudo que tem buraco (células com buraco)
sum(geom(no_hole)[,"hole"]==1) #vai voltar zero pq eu preenchi todos os buracos

###
amazon<-vect("R/Dia 1/Projecao_reprojecao/brazilian_legal_amazon/brazilian_legal_amazon.shp")
plot(amazon) #o mesmo raciocínio do intersecto do qgis
interse<-intersect(eco_name,amazon)
plot(interse) #ele volta o intersecto da amazônia legal e da amazônia
names(eco_name)
###
agg<-aggregate(interse,"ECO_BIOME_")
plot(agg)

plot(disagg(eco_name))

diff<-symdif(agg,amazon) #o que não se toca (não tem intersecçao)
plot(diff)

uniao<-union(agg[10,],amazon)
plot(uniao)

plot(mask(eco_name,amazon))

###
moojeni<-vect("R/Dia 1/Tipos de dados/Vetorial/Bothrops_moojeni.shp")
plot(moojeni)


# (1) Quais são as ecoregiões na distribuição de Bothops moojeni

Bothops <- vect("../Dia 1/Tipos de dados/Vetorial/Bothrops moojeni_pontos.shp")
ecorregiao <- vect("R/Dia 3/ecoregions/Ecoregions2017/Ecoregions2017.shp")
head(ecorregiao)
head(Bothops)

plot(Bothops)
plot(ecorregiao)

intersect <- intersect(ecorregiao, Bothops)
distribuicao <- unique(intersect$ECO_NAME )

print(distribuicao)

plot(ecorregiao, main = "Distribuição de Bothrops moojeni nas Ecorregiões", col = "lightgray")
plot(intersect, add = TRUE, col = "lightgreen")
points(Bothops, col = "red", pch = 20)


# (2) Filtre os polígonos das ecoregions que estão no bioma “Tropical & Subtropical Grasslands, Savannas & Shrublands”.

head(ecorregiao)
fill_ecoregions <- ecorregiao[ecorregiao$BIOME_NAME == "Tropical & Subtropical Grasslands, Savannas & Shrublands", ]

plot(fill_ecoregions, main = "Ecorregiões do Bioma: Tropical & Subtropical Grasslands, Savannas & Shrublands", col = "lightblue")
